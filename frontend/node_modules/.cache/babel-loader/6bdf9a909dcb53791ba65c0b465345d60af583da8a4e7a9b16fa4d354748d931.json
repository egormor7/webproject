{"ast":null,"code":"import Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  components: {\n    Footer,\n    Middle,\n    Header\n  },\n  data: function () {\n    return {\n      user: null,\n      posts: [],\n      users: []\n    };\n  },\n  beforeMount() {\n    if (localStorage.getItem(\"jwt\") && !this.user) {\n      this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n    }\n    axios.get(\"/api/1/posts\").then(response => {\n      this.posts = response.data;\n    });\n    axios.get(\"/api/1/users\").then(response => {\n      this.users = response.data;\n    });\n  },\n  beforeCreate() {\n    this.$root.$on(\"onEnter\", (login, password) => {\n      if (password === \"\") {\n        this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n        return;\n      }\n      axios.post(\"/api/1/jwt\", {\n        login,\n        password\n      }).then(response => {\n        localStorage.setItem(\"jwt\", response.data);\n        this.$root.$emit(\"onJwt\", response.data);\n      }).catch(error => {\n        this.$root.$emit(\"onEnterValidationError\", error.response.data);\n      });\n    });\n    this.$root.$on(\"onRegister\", (login, name, password) => {\n      if (password.length < 2 || password.length > 60) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Password should be at length \" + \"between 2 and 60 characters\");\n        return;\n      }\n      if (name.length < 2 || name.length > 24) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Name should be at length \" + \"between 2 and 24 characters\");\n        return;\n      }\n      if (!/^[a-zA-Z]{2,12} [a-zA-Z]{2,12}$/.test(name)) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Expected name is two words with latin letters only\");\n        return;\n      }\n      if (login.length < 2 || login.length > 24) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Login should be at length \" + \"between 2 and 24 characters\");\n        return;\n      }\n      if (!/^[a-zA-Z]{2,24}$/.test(login)) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Expected latin letters only in login\");\n        return;\n      }\n      axios.post(\"/api/1/users\", {\n        login,\n        name,\n        password\n      }).then(response => {\n        localStorage.setItem(\"jwt\", response.data);\n        this.$root.$emit(\"onJwt\", response.data);\n      }).catch(error => {\n        this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n      });\n    });\n    this.$root.$on(\"onJwt\", jwt => {\n      localStorage.setItem(\"jwt\", jwt);\n      axios.get(\"/api/1/users/auth\", {\n        params: {\n          jwt\n        }\n      }).then(response => {\n        this.user = response.data;\n        this.$root.$emit(\"onChangePage\", \"Index\");\n      }).catch(() => this.$root.$emit(\"onLogout\"));\n    });\n    this.$root.$on(\"onLogout\", () => {\n      localStorage.removeItem(\"jwt\");\n      this.user = null;\n    });\n  }\n};","map":{"version":3,"names":["Header","Middle","Footer","axios","name","components","data","user","posts","users","beforeMount","localStorage","getItem","$root","$emit","get","then","response","beforeCreate","$on","login","password","post","setItem","catch","error","length","test","jwt","params","removeItem"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <Header :user=\"user\"/>\n    <Middle :posts=\"posts\" :users=\"users\"/>\n    <Footer/>\n  </div>\n</template>\n\n<script>\nimport Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  components: {\n    Footer,\n    Middle,\n    Header\n  },\n  data: function () {\n    return {\n      user: null,\n      posts: [],\n      users: []\n    }\n  },\n  beforeMount() {\n    if (localStorage.getItem(\"jwt\") && !this.user) {\n      this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n    }\n\n    axios.get(\"/api/1/posts\").then(response => {\n      this.posts = response.data;\n    });\n    axios.get(\"/api/1/users\").then(response => {\n      this.users = response.data;\n    });\n  },\n  beforeCreate() {\n    this.$root.$on(\"onEnter\", (login, password) => {\n      if (password === \"\") {\n        this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n        return;\n      }\n\n      axios.post(\"/api/1/jwt\", {\n        login, password\n      }).then(response => {\n        localStorage.setItem(\"jwt\", response.data);\n        this.$root.$emit(\"onJwt\", response.data);\n      }).catch(error => {\n        this.$root.$emit(\"onEnterValidationError\", error.response.data);\n      });\n    });\n\n    this.$root.$on(\"onRegister\", (login, name, password) => {\n      if (password.length < 2 || password.length > 60) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Password should be at length \" +\n            \"between 2 and 60 characters\");\n        return;\n      }\n      if (name.length < 2 || name.length > 24) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Name should be at length \" +\n            \"between 2 and 24 characters\");\n        return;\n      }\n      if (!(/^[a-zA-Z]{2,12} [a-zA-Z]{2,12}$/.test(name))) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Expected name is two words with latin letters only\");\n        return;\n      }\n      if (login.length < 2 || login.length > 24) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Login should be at length \" +\n            \"between 2 and 24 characters\");\n        return;\n      }\n      if (!(/^[a-zA-Z]{2,24}$/.test(login))) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Expected latin letters only in login\");\n        return;\n      }\n\n      axios.post(\"/api/1/users\", {\n        login, name, password\n      }).then(response => {\n        localStorage.setItem(\"jwt\", response.data);\n        this.$root.$emit(\"onJwt\", response.data);\n      }).catch(error => {\n        this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n      });\n    });\n\n    this.$root.$on(\"onJwt\", (jwt) => {\n      localStorage.setItem(\"jwt\", jwt);\n\n      axios.get(\"/api/1/users/auth\", {\n        params: {\n          jwt\n        }\n      }).then(response => {\n        this.user = response.data;\n        this.$root.$emit(\"onChangePage\", \"Index\");\n      }).catch(() => this.$root.$emit(\"onLogout\"))\n    });\n\n    this.$root.$on(\"onLogout\", () => {\n      localStorage.removeItem(\"jwt\");\n      this.user = null;\n    });\n\n  }\n}\n</script>\n\n<style>\n#app {\n\n}\n</style>\n"],"mappings":"AASA,OAAAA,MAAA;AACA,OAAAC,MAAA;AACA,OAAAC,MAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,MAAA;IACAD,MAAA;IACAD;EACA;EACAM,IAAA,WAAAA,CAAA;IACA;MACAC,IAAA;MACAC,KAAA;MACAC,KAAA;IACA;EACA;EACAC,YAAA;IACA,IAAAC,YAAA,CAAAC,OAAA,iBAAAL,IAAA;MACA,KAAAM,KAAA,CAAAC,KAAA,UAAAH,YAAA,CAAAC,OAAA;IACA;IAEAT,KAAA,CAAAY,GAAA,iBAAAC,IAAA,CAAAC,QAAA;MACA,KAAAT,KAAA,GAAAS,QAAA,CAAAX,IAAA;IACA;IACAH,KAAA,CAAAY,GAAA,iBAAAC,IAAA,CAAAC,QAAA;MACA,KAAAR,KAAA,GAAAQ,QAAA,CAAAX,IAAA;IACA;EACA;EACAY,aAAA;IACA,KAAAL,KAAA,CAAAM,GAAA,aAAAC,KAAA,EAAAC,QAAA;MACA,IAAAA,QAAA;QACA,KAAAR,KAAA,CAAAC,KAAA;QACA;MACA;MAEAX,KAAA,CAAAmB,IAAA;QACAF,KAAA;QAAAC;MACA,GAAAL,IAAA,CAAAC,QAAA;QACAN,YAAA,CAAAY,OAAA,QAAAN,QAAA,CAAAX,IAAA;QACA,KAAAO,KAAA,CAAAC,KAAA,UAAAG,QAAA,CAAAX,IAAA;MACA,GAAAkB,KAAA,CAAAC,KAAA;QACA,KAAAZ,KAAA,CAAAC,KAAA,2BAAAW,KAAA,CAAAR,QAAA,CAAAX,IAAA;MACA;IACA;IAEA,KAAAO,KAAA,CAAAM,GAAA,gBAAAC,KAAA,EAAAhB,IAAA,EAAAiB,QAAA;MACA,IAAAA,QAAA,CAAAK,MAAA,QAAAL,QAAA,CAAAK,MAAA;QACA,KAAAb,KAAA,CAAAC,KAAA,gEACA;QACA;MACA;MACA,IAAAV,IAAA,CAAAsB,MAAA,QAAAtB,IAAA,CAAAsB,MAAA;QACA,KAAAb,KAAA,CAAAC,KAAA,4DACA;QACA;MACA;MACA,uCAAAa,IAAA,CAAAvB,IAAA;QACA,KAAAS,KAAA,CAAAC,KAAA;QACA;MACA;MACA,IAAAM,KAAA,CAAAM,MAAA,QAAAN,KAAA,CAAAM,MAAA;QACA,KAAAb,KAAA,CAAAC,KAAA,6DACA;QACA;MACA;MACA,wBAAAa,IAAA,CAAAP,KAAA;QACA,KAAAP,KAAA,CAAAC,KAAA;QACA;MACA;MAEAX,KAAA,CAAAmB,IAAA;QACAF,KAAA;QAAAhB,IAAA;QAAAiB;MACA,GAAAL,IAAA,CAAAC,QAAA;QACAN,YAAA,CAAAY,OAAA,QAAAN,QAAA,CAAAX,IAAA;QACA,KAAAO,KAAA,CAAAC,KAAA,UAAAG,QAAA,CAAAX,IAAA;MACA,GAAAkB,KAAA,CAAAC,KAAA;QACA,KAAAZ,KAAA,CAAAC,KAAA,8BAAAW,KAAA,CAAAR,QAAA,CAAAX,IAAA;MACA;IACA;IAEA,KAAAO,KAAA,CAAAM,GAAA,UAAAS,GAAA;MACAjB,YAAA,CAAAY,OAAA,QAAAK,GAAA;MAEAzB,KAAA,CAAAY,GAAA;QACAc,MAAA;UACAD;QACA;MACA,GAAAZ,IAAA,CAAAC,QAAA;QACA,KAAAV,IAAA,GAAAU,QAAA,CAAAX,IAAA;QACA,KAAAO,KAAA,CAAAC,KAAA;MACA,GAAAU,KAAA,YAAAX,KAAA,CAAAC,KAAA;IACA;IAEA,KAAAD,KAAA,CAAAM,GAAA;MACAR,YAAA,CAAAmB,UAAA;MACA,KAAAvB,IAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}